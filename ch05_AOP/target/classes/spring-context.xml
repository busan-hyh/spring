<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	
	<!-- 핵심기능IoP -->
	<context:component-scan base-package="kr.co.hyh"></context:component-scan>
	
	<!-- 부가기능AOP -->
	<!-- 부가기능 클래스 지정 -->
	<aop:config>
		<!-- 포인트컷 메서드 지정 (*은 리턴타입(*/void/!void 세가지만 있음), ..은 매개변수. 둘 다 뭐든 ok라는 뜻)-->
		<aop:pointcut id="allPointcut" expression="execution(* kr.co.hyh.BoardService.*(..))" />
		<aop:aspect ref="logAdvice">
			<!-- advice가 실행될 곳은 insertPointcut이며 before에 실행된다.  -->
			<aop:before method="beforeLog" pointcut-ref="allPointcut" />
			<aop:after method="afterLog" pointcut-ref="allPointcut" />
		</aop:aspect>
	</aop:config>
</beans>
